{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  //intial state of cart\n  cartItems: [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const itemIndex = state.cartItems.findIndex(item => item.id === action.payload.id); //using find index, an array method, to chevk if the item we are trying to add is already in the cart, compare id's\n\n      if (itemIndex >= 0) {\n        //incase item is already in cart, condition ^\n        state.cartItems[itemIndex].cartQuantity += 1;\n      }\n\n      const tempProduct = { ...action.payload,\n        cartQuantity: 1\n      };\n      state.cartItems.push(temoProduct);\n    }\n\n  }\n});\nexport const {\n  addToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","cartTotalQuantity","cartTotalAmount","cartSlice","name","reducers","addToCart","state","action","itemIndex","findIndex","item","id","payload","cartQuantity","tempProduct","push","temoProduct","actions","reducer"],"sources":["/Users/lilosivert/Downloads/Code/React-Development/Online-Shop/Front-End/src/features/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState ={ //intial state of cart\n    cartItems: [],\n    cartTotalQuantity: 0,\n    cartTotalAmount: 0\n};\n\nconst cartSlice = createSlice({\n    name: \"cart\",\n    initialState,\n    reducers: {\n        addToCart(state, action){\n            const itemIndex = state.cartItems.findIndex( \n                (item) => item.id === action.payload.id\n            ); //using find index, an array method, to chevk if the item we are trying to add is already in the cart, compare id's\n                if(itemIndex >= 0){ //incase item is already in cart, condition ^\n                    state.cartItems[itemIndex].cartQuantity += 1;\n                }\n            const tempProduct = {...action.payload, cartQuantity: 1 };\n            state.cartItems.push(temoProduct);\n        },\n    },\n});\n\nexport const { addToCart } = cartSlice.actions;\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAE;EAAE;EAClBC,SAAS,EAAE,EADK;EAEhBC,iBAAiB,EAAE,CAFH;EAGhBC,eAAe,EAAE;AAHD,CAApB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MADoB;EAE1BL,YAF0B;EAG1BM,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAe;MACpB,MAAMC,SAAS,GAAGF,KAAK,CAACP,SAAN,CAAgBU,SAAhB,CACbC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,EADvB,CAAlB,CADoB,CAGjB;;MACC,IAAGH,SAAS,IAAI,CAAhB,EAAkB;QAAE;QAChBF,KAAK,CAACP,SAAN,CAAgBS,SAAhB,EAA2BK,YAA3B,IAA2C,CAA3C;MACH;;MACL,MAAMC,WAAW,GAAG,EAAC,GAAGP,MAAM,CAACK,OAAX;QAAoBC,YAAY,EAAE;MAAlC,CAApB;MACAP,KAAK,CAACP,SAAN,CAAgBgB,IAAhB,CAAqBC,WAArB;IACH;;EAVK;AAHgB,CAAD,CAA7B;AAiBA,OAAO,MAAM;EAAEX;AAAF,IAAgBH,SAAS,CAACe,OAAhC;AACP,eAAef,SAAS,CAACgB,OAAzB"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/lilosivert/Downloads/Code/React-Development/Online-Shop/Front-End/src/components/auth/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUser } from \"../../features/authSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  console.log(auth);\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  }); //we want to update this state down there vvv --- onchange event\n  //console.log(\"user: \",user)\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(registerUser(user)); //now when we submit the form we are dispatching the backend function registerUser , save database, add token\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"name\",\n        onChange: e => setUser({ ...user,\n          name: e.target.value\n        }) //this is how we are updating the name\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"email\",\n        onChange: e => setUser({ ...user,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        onChange: e => setUser({ ...user,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"AdyM0kIxUSRAZD7mFhrALPBjgBo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useDispatch","useSelector","registerUser","Register","dispatch","auth","state","console","log","user","setUser","name","email","password","handleSubmit","e","preventDefault","target","value"],"sources":["/Users/lilosivert/Downloads/Code/React-Development/Online-Shop/Front-End/src/components/auth/Register.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUser } from \"../../features/authSlice\";\n\nconst Register = () => {\n    \n    const dispatch = useDispatch();\n    const auth = useSelector((state) => state.auth);\n    console.log(auth);\n\n    const [user, setUser] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n    }) //we want to update this state down there vvv --- onchange event\n    \n    //console.log(\"user: \",user)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(registerUser(user)) //now when we submit the form we are dispatching the backend function registerUser , save database, add token\n    };\n\n    return ( \n    <>\n    <form onSubmit = {handleSubmit}>\n        <h2>Register</h2>\n        <input\n            type=\"text\" \n            placeholder=\"name\" \n            onChange = {(e) => setUser({...user, name: e.target.value})} //this is how we are updating the name\n        />\n        <input \n            type=\"email\" \n            placeholder=\"email\" \n            onChange = {(e) => setUser({...user, email: e.target.value})}\n        /> \n        <input \n            type=\"password\" \n            placeholder=\"password\" \n            onChange = {(e) => setUser({...user, password: e.target.value})}\n        />\n        <button>Register</button>\n\n    </form>\n    </>)\n}\nexport default Register;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,0BAA7B;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAEnB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAMK,IAAI,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;EACAE,OAAO,CAACC,GAAR,CAAYH,IAAZ;EAEA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;IAC7BY,IAAI,EAAE,EADuB;IAE7BC,KAAK,EAAE,EAFsB;IAG7BC,QAAQ,EAAE;EAHmB,CAAD,CAAhC,CANmB,CAUhB;EAEH;;EAEA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IACxBA,CAAC,CAACC,cAAF;IACAZ,QAAQ,CAACF,YAAY,CAACO,IAAD,CAAb,CAAR,CAFwB,CAEK;EAChC,CAHD;;EAKA,oBACA;IAAA,uBACA;MAAM,QAAQ,EAAIK,YAAlB;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QACI,IAAI,EAAC,MADT;QAEI,WAAW,EAAC,MAFhB;QAGI,QAAQ,EAAKC,CAAD,IAAOL,OAAO,CAAC,EAAC,GAAGD,IAAJ;UAAUE,IAAI,EAAEI,CAAC,CAACE,MAAF,CAASC;QAAzB,CAAD,CAH9B,CAGiE;;MAHjE;QAAA;QAAA;QAAA;MAAA,QAFJ,eAOI;QACI,IAAI,EAAC,OADT;QAEI,WAAW,EAAC,OAFhB;QAGI,QAAQ,EAAKH,CAAD,IAAOL,OAAO,CAAC,EAAC,GAAGD,IAAJ;UAAUG,KAAK,EAAEG,CAAC,CAACE,MAAF,CAASC;QAA1B,CAAD;MAH9B;QAAA;QAAA;QAAA;MAAA,QAPJ,eAYI;QACI,IAAI,EAAC,UADT;QAEI,WAAW,EAAC,UAFhB;QAGI,QAAQ,EAAKH,CAAD,IAAOL,OAAO,CAAC,EAAC,GAAGD,IAAJ;UAAUI,QAAQ,EAAEE,CAAC,CAACE,MAAF,CAASC;QAA7B,CAAD;MAH9B;QAAA;QAAA;QAAA;MAAA,QAZJ,eAiBI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADA;AAuBH,CA1CD;;GAAMf,Q;UAEeH,W,EACJC,W;;;KAHXE,Q;AA2CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
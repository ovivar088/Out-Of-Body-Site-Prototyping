{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { url } from \"./api\";\nimport jwtDecode from \"jwt-decode\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  //check local storage for token, buitl in JS object\n  name: \"\",\n  email: \"\",\n  _id: \"\",\n  registerStatus: \"\",\n  //pending, fullfilled, or reject\n  registerError: \"\",\n  loginStatus: \"\",\n  loginError: \"\",\n  userLoaded: false\n}; //action creator --> performs http request to backend, register user, get back token, then should be avaialble to action.payload, in case error you also add to pay;oad\n\nexport const registerUser = createAsyncThunk(\"auth/registerUser\", (values, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    //handle error, http request a call to backend\n    const token = axios.post(`${url / register}`, {\n      name: values.name,\n      email: values.email,\n      password: values.password\n    });\n    localStorage.setItem(\"token\", token.data);\n    return token.data;\n  } catch (err) {\n    console.log(err.response.data);\n    return rejectWithValue(err.response.data);\n  }\n});\nconst authReducer = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {},\n  //we will be creating reducer and action will automatically created by redux toolkit\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, (state, action) => {\n      return { ...state,\n        registerStatus: \"pending\"\n      };\n    });\n    builder.addCase(registerUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return { ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          registerStatus: \"success\"\n        };\n      } else return state;\n    });\n    builder.addCase(registerUser.reject, (state, action) => {\n      return { ...state,\n        registerStatus: \"rejected\",\n        registerError: action.payload\n      };\n    });\n  }\n} //accepting object\n);\nexport default authReducer.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","url","jwtDecode","initialState","token","localStorage","getItem","name","email","_id","registerStatus","registerError","loginStatus","loginError","userLoaded","registerUser","values","rejectWithValue","post","register","password","setItem","data","err","console","log","response","authReducer","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","user","reject","reducer"],"sources":["/Users/lilosivert/Downloads/Code/React-Development/Online-Shop/Front-End/src/features/authSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport axios from \"axios\"\nimport { url } from \"./api\";\nimport jwtDecode from \"jwt-decode\"\n\nconst initialState = {\n    token: localStorage.getItem(\"token\"),//check local storage for token, buitl in JS object\n    name: \"\",\n    email: \"\",\n    _id: \"\",\n    registerStatus: \"\",//pending, fullfilled, or reject\n    registerError: \"\",\n    loginStatus: \"\",\n    loginError: \"\",\n    userLoaded: false,\n};\n\n//action creator --> performs http request to backend, register user, get back token, then should be avaialble to action.payload, in case error you also add to pay;oad\nexport const registerUser = createAsyncThunk(\n    \"auth/registerUser\",\n    (values, {rejectWithValue}) => {\n        try{//handle error, http request a call to backend\n\n            const token = axios.post(`${url/register}`, {\n                name: values.name,\n                email: values.email,\n                password: values.password\n            });\n\n            localStorage.setItem(\"token\", token.data)\n\n            return token.data\n        }\n        catch(err) {\n            console.log(err.response.data);\n            return rejectWithValue(err.response.data);\n        }\n\n    }\n)\n\nconst authReducer = createSlice(\n    {\n        name: \"auth\",\n        initialState,\n        reducers: {}, //we will be creating reducer and action will automatically created by redux toolkit\n        extraReducers: (builder) => {\n            builder.addCase(registerUser.pending, (state, action) => {\n                return { ...state, registerStatus: \"pending\"}\n            });\n            builder.addCase(registerUser.fulfilled, (state, action) => {\n                if(action.payload){\n                    const user = jwtDecode(action.payload)\n\n                    return{\n                        ...state,\n                        token: action.payload,\n                        name: user.name,\n                        email: user.email,\n                        _id: user._id,\n                        registerStatus: \"success\"\n                    }\n                }\n                else return state\n            });\n            builder.addCase(registerUser.reject, (state, action) => {\n                return {\n                    ...state,\n                    registerStatus: \"rejected\",\n                    registerError: action.payload\n                }\n            });\n        },\n    }//accepting object\n);\n\nexport default authReducer.reducer"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;EACoB;EACrCC,IAAI,EAAE,EAFW;EAGjBC,KAAK,EAAE,EAHU;EAIjBC,GAAG,EAAE,EAJY;EAKjBC,cAAc,EAAE,EALC;EAKE;EACnBC,aAAa,EAAE,EANE;EAOjBC,WAAW,EAAE,EAPI;EAQjBC,UAAU,EAAE,EARK;EASjBC,UAAU,EAAE;AATK,CAArB,C,CAYA;;AACA,OAAO,MAAMC,YAAY,GAAGhB,gBAAgB,CACxC,mBADwC,EAExC,CAACiB,MAAD,WAA+B;EAAA,IAAtB;IAACC;EAAD,CAAsB;;EAC3B,IAAG;IAAC;IAEA,MAAMb,KAAK,GAAGJ,KAAK,CAACkB,IAAN,CAAY,GAAEjB,GAAG,GAACkB,QAAS,EAA3B,EAA8B;MACxCZ,IAAI,EAAES,MAAM,CAACT,IAD2B;MAExCC,KAAK,EAAEQ,MAAM,CAACR,KAF0B;MAGxCY,QAAQ,EAAEJ,MAAM,CAACI;IAHuB,CAA9B,CAAd;IAMAf,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA8BjB,KAAK,CAACkB,IAApC;IAEA,OAAOlB,KAAK,CAACkB,IAAb;EACH,CAXD,CAYA,OAAMC,GAAN,EAAW;IACPC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAJ,CAAaJ,IAAzB;IACA,OAAOL,eAAe,CAACM,GAAG,CAACG,QAAJ,CAAaJ,IAAd,CAAtB;EACH;AAEJ,CApBuC,CAArC;AAuBP,MAAMK,WAAW,GAAG7B,WAAW,CAC3B;EACIS,IAAI,EAAE,MADV;EAEIJ,YAFJ;EAGIyB,QAAQ,EAAE,EAHd;EAGkB;EACdC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CAACC,OAAR,CAAgBhB,YAAY,CAACiB,OAA7B,EAAsC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACrD,OAAO,EAAE,GAAGD,KAAL;QAAYvB,cAAc,EAAE;MAA5B,CAAP;IACH,CAFD;IAGAoB,OAAO,CAACC,OAAR,CAAgBhB,YAAY,CAACoB,SAA7B,EAAwC,CAACF,KAAD,EAAQC,MAAR,KAAmB;MACvD,IAAGA,MAAM,CAACE,OAAV,EAAkB;QACd,MAAMC,IAAI,GAAGnC,SAAS,CAACgC,MAAM,CAACE,OAAR,CAAtB;QAEA,OAAM,EACF,GAAGH,KADD;UAEF7B,KAAK,EAAE8B,MAAM,CAACE,OAFZ;UAGF7B,IAAI,EAAE8B,IAAI,CAAC9B,IAHT;UAIFC,KAAK,EAAE6B,IAAI,CAAC7B,KAJV;UAKFC,GAAG,EAAE4B,IAAI,CAAC5B,GALR;UAMFC,cAAc,EAAE;QANd,CAAN;MAQH,CAXD,MAYK,OAAOuB,KAAP;IACR,CAdD;IAeAH,OAAO,CAACC,OAAR,CAAgBhB,YAAY,CAACuB,MAA7B,EAAqC,CAACL,KAAD,EAAQC,MAAR,KAAmB;MACpD,OAAO,EACH,GAAGD,KADA;QAEHvB,cAAc,EAAE,UAFb;QAGHC,aAAa,EAAEuB,MAAM,CAACE;MAHnB,CAAP;IAKH,CAND;EAOH;AA9BL,CAD2B,CAgC1B;AAhC0B,CAA/B;AAmCA,eAAeT,WAAW,CAACY,OAA3B"},"metadata":{},"sourceType":"module"}
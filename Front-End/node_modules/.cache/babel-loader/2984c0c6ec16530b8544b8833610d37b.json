{"ast":null,"code":"import{createApi,fetchBaseQuery}from\"@reduxjs/toolkit/query/react\";export var productsApi=createApi({reducerPath:\"productsApi\",baseQuery:fetchBaseQuery({baseUrl:\"http://localhost:5000/\"}),endpoints:function endpoints(builder){return{getAllProducts:builder.query({query:function query(){return\"products\";}})};}});var useGetAllProductsQuery=productsApi.useGetAllProductsQuery;/*// Need to use the React-specific entry point to import createApi\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// Define a service using a base URL and expected endpoints\nexport const productsApi = createApi({\n  reducerPath: \"productsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:5000/\" }),\n  endpoints: (builder) => ({\n    getAllProducts: builder.query({\n      query: () => `products`,\n    }),\n  }),\n});\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const { useGetAllProductsQuery } = productsApi;*/export{useGetAllProductsQuery};","map":{"version":3,"names":["createApi","fetchBaseQuery","productsApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getAllProducts","query","useGetAllProductsQuery"],"sources":["/Users/lilosivert/Downloads/Code/React-Development/Online-Shop/Front-End/src/features/productsApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const productsApi = createApi({\n    reducerPath: \"productsApi\",\n    baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:5000/\" }),\n    endpoints: (builder) => ({\n        getAllProducts: builder.query({\n            query: () => `products`,\n        }),\n    }),\n});\n\n\nexport const { useGetAllProductsQuery } = productsApi;\n\n/*// Need to use the React-specific entry point to import createApi\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// Define a service using a base URL and expected endpoints\nexport const productsApi = createApi({\n  reducerPath: \"productsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:5000/\" }),\n  endpoints: (builder) => ({\n    getAllProducts: builder.query({\n      query: () => `products`,\n    }),\n  }),\n});\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const { useGetAllProductsQuery } = productsApi;*/"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,cAApB,KAA0C,8BAA1C,CAEA,MAAO,IAAMC,YAAW,CAAGF,SAAS,CAAC,CACjCG,WAAW,CAAE,aADoB,CAEjCC,SAAS,CAAEH,cAAc,CAAC,CAAEI,OAAO,CAAE,wBAAX,CAAD,CAFQ,CAGjCC,SAAS,CAAE,mBAACC,OAAD,QAAc,CACrBC,cAAc,CAAED,OAAO,CAACE,KAAR,CAAc,CAC1BA,KAAK,CAAE,mCADmB,CAAd,CADK,CAAd,EAHsB,CAAD,CAA7B,CAWA,GAAQC,uBAAR,CAAmCR,WAAnC,CAAQQ,sBAAR,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wD"},"metadata":{},"sourceType":"module"}
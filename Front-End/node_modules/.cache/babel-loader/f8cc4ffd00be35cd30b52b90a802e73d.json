{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  items: [],\n  status: null\n};\nexport const productsFetch = createAsyncThunk( //action creator\n\"products/productsFetch\", async () => {\n  try {\n    const response = await axios.get(\"http://localhost:5000/products\"); //async action\n\n    return response === null || response === void 0 ? void 0 : response.data; //? this will report an error incase we dont have a property data in reponse\n  } catch (error) {\n    console.log(error);\n  }\n});\nconst productsSlice = createSlice({\n  //a slice is logic containing reducers and actions, wont have different files for them\n  name: \"products\",\n  initialState,\n  reducers: {},\n  //generate action creators\n  extraReducers: {\n    [productsFetch.pending]: (state, action) => {\n      state.status = \"pending\";\n    },\n    [productsFetch.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.items = action.payload;\n    },\n    [productsFetch.rejected]: (state, action) => {\n      state.status = \"rejected\";\n    }\n  } //only handle action types\n\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","items","status","productsFetch","response","get","data","error","console","log","productsSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["/Users/lilosivert/Downloads/Code/React-Development/Online-Shop/Front-End/src/features/productsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n    items: [], \n    status: null,\n};\n\nexport const productsFetch = createAsyncThunk( //action creator\n    \"products/productsFetch\",\n    async() => {\n        try {\n      const response = await axios.get(\"http://localhost:5000/products\"); //async action\n      return response?.data;//? this will report an error incase we dont have a property data in reponse\n        }\n        catch(error) {\n            console.log(error);\n        }\n    }\n);\n\nconst productsSlice = createSlice({ //a slice is logic containing reducers and actions, wont have different files for them\n    name: \"products\",\n    initialState,\n    reducers: {}, //generate action creators\n    extraReducers: {\n        [productsFetch.pending]: (state, action) => {\n            state.status = \"pending\";\n        },\n        [productsFetch.fulfilled]: (state, action) => {\n            state.status = \"success\";\n            state.items = action.payload;\n        },\n        [productsFetch.rejected]: (state, action) => {\n            state.status = \"rejected\";\n        },\n    }, //only handle action types\n});\n\nexport default productsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EADU;EAEjBC,MAAM,EAAE;AAFS,CAArB;AAKA,OAAO,MAAMC,aAAa,GAAGL,gBAAgB,EAAE;AAC3C,wBADyC,EAEzC,YAAW;EACP,IAAI;IACN,MAAMM,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,gCAAV,CAAvB,CADM,CAC8D;;IACpE,OAAOD,QAAP,aAAOA,QAAP,uBAAOA,QAAQ,CAAEE,IAAjB,CAFM,CAEgB;EACnB,CAHD,CAIA,OAAMC,KAAN,EAAa;IACTC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAVwC,CAAtC;AAaP,MAAMG,aAAa,GAAGb,WAAW,CAAC;EAAE;EAChCc,IAAI,EAAE,UADwB;EAE9BX,YAF8B;EAG9BY,QAAQ,EAAE,EAHoB;EAGhB;EACdC,aAAa,EAAE;IACX,CAACV,aAAa,CAACW,OAAf,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACxCD,KAAK,CAACb,MAAN,GAAe,SAAf;IACH,CAHU;IAIX,CAACC,aAAa,CAACc,SAAf,GAA2B,CAACF,KAAD,EAAQC,MAAR,KAAmB;MAC1CD,KAAK,CAACb,MAAN,GAAe,SAAf;MACAa,KAAK,CAACd,KAAN,GAAce,MAAM,CAACE,OAArB;IACH,CAPU;IAQX,CAACf,aAAa,CAACgB,QAAf,GAA0B,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MACzCD,KAAK,CAACb,MAAN,GAAe,UAAf;IACH;EAVU,CAJe,CAe3B;;AAf2B,CAAD,CAAjC;AAkBA,eAAeQ,aAAa,CAACU,OAA7B"},"metadata":{},"sourceType":"module"}